name: Deploy to Koyeb
run-name: Deploy to Koyeb

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write # Required to create and update deployments
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Create GitHub Deployment
        id: create_deployment
        uses: actions/github-script@v7
        with:
          script: |
            const response = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              required_contexts: [],
              environment: "Discord Bot - Backend",
              auto_merge: false,
            });

            core.setOutput("deployment_id", response.data.id);

      - name: Download and install Koyeb CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/koyeb/koyeb-cli/master/install.sh | sh
          echo "$HOME/.koyeb/bin" >> $GITHUB_PATH

      - name: Deploy to Koyeb
        id: koyeb_deploy
        continue-on-error: true
        env:
          KOYEB_API_KEY: ${{ secrets.KOYEB_API_KEY }}
        run: |
          koyeb service redeploy brilliant-austina/sessions-bot --token $KOYEB_API_KEY

      - name: Mark deployment as finished
        if: always()
        uses: actions/github-script@v7
        env:
          DEPLOYMENT_ID: ${{ steps.create_deployment.outputs.deployment_id }}
          KOYEB_STATUS: ${{ steps.koyeb_deploy.outcome }}
        with:
          script: |
            const deploymentId = Number(process.env.DEPLOYMENT_ID);
            const status = process.env.KOYEB_STATUS === 'success' ? 'success' : 'failure';

            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deploymentId,
              state: status,
              environment: "Discord Bot - Backend",
              description: "Auto Deploy to Koyeb : https://brilliant-austina-sessions-bot-discord-5fa4fab2.koyeb.app/",
              log_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            });

  previous-deployments:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write # Required to create and update deployments

    steps:
      - name: List Deployments
        uses: actions/github-script@v7
        with: 
          script: |
            // Get all previous/current deployments:
            const allDeploys = await github.rest.repos.listDeployments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            });

            const deploymentIdsForDeletion = allDeploys.data.map(deployment => {if(deployment.original_environment == 'production') return deployment.id})

            console.log('allDeploys:', allDeploys);
            console.log('deploymentIdsForDeletion:', deploymentIdsForDeletion);